{"version":3,"file":"resolver.module.js","sources":["../src/resolver.ts"],"sourcesContent":["import fetch from 'cross-fetch'\nimport { DIDDocument, DIDResolutionResult, DIDResolver, ParsedDID } from 'did-resolver'\n\nconst DOC_PATH = '/.well-known/did.json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function get(url: string): Promise<any> {\n  const res = await fetch(url, { mode: 'cors' })\n  if (res.status >= 400) {\n    throw new Error(`Bad response ${res.statusText}`)\n  }\n  return res.json()\n}\n\nexport function getResolver(): Record<string, DIDResolver> {\n  async function resolve(did: string, parsed: ParsedDID): Promise<DIDResolutionResult> {\n    let err = null\n    let path = decodeURIComponent(parsed.id) + DOC_PATH\n    const id = parsed.id.split(':')\n    if (id.length > 1) {\n      path = id.map(decodeURIComponent).join('/') + '/did.json'\n    }\n\n    const url = `https://${path}`\n\n    const didDocumentMetadata = {}\n    let didDocument: DIDDocument | null = null\n\n    do {\n      try {\n        didDocument = await get(url)\n      } catch (error) {\n        err = `resolver_error: DID must resolve to a valid https URL containing a JSON document: ${error}`\n        break\n      }\n\n      // TODO: this excludes the use of query params\n      const docIdMatchesDid = didDocument?.id === did\n      if (!docIdMatchesDid) {\n        err = 'resolver_error: DID document id does not match requested did'\n        // break // uncomment this when adding more checks\n      }\n      // eslint-disable-next-line no-constant-condition\n    } while (false)\n\n    const contentType =\n      typeof didDocument?.['@context'] !== 'undefined' ? 'application/did+ld+json' : 'application/did+json'\n\n    if (err) {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: {\n          error: 'notFound',\n          message: err,\n        },\n      }\n    } else {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: { contentType },\n      }\n    }\n  }\n\n  return { web: resolve }\n}\n"],"names":["get","url","fetch","mode","res","status","Error","statusText","json","_settle","pact","state","value","_Pact","s","v","o","bind","then","DOC_PATH","prototype","onFulfilled","onRejected","result","callback","e","_this","getResolver","resolve","did","parsed","contentType","didDocument","err","didDocumentMetadata","didResolutionMetadata","error","message","path","decodeURIComponent","id","split","length","map","join","docIdMatchesDid","web"],"mappings":"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"}