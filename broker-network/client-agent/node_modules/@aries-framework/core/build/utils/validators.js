"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsStringOrInstance = void 0;
const class_validator_1 = require("class-validator");
/**
 * Checks if the value is an instance of the specified object.
 */
function IsStringOrInstance(targetType, validationOptions) {
    return class_validator_1.ValidateBy({
        name: 'isStringOrVerificationMethod',
        constraints: [targetType],
        validator: {
            validate: (value, args) => class_validator_1.isString(value) || class_validator_1.isInstance(value, args === null || args === void 0 ? void 0 : args.constraints[0]),
            defaultMessage: class_validator_1.buildMessage((eachPrefix, args) => {
                if (args === null || args === void 0 ? void 0 : args.constraints[0]) {
                    return eachPrefix + `$property must be of type string or instance of ${args.constraints[0].name}`;
                }
                else {
                    return (eachPrefix + `isStringOrVerificationMethod decorator expects and object as value, but got falsy value.`);
                }
            }, validationOptions),
        },
    }, validationOptions);
}
exports.IsStringOrInstance = IsStringOrInstance;
//# sourceMappingURL=validators.js.map