import type { AgentConfig } from '../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../agent/Handler';
import type { DidResolverService } from '../../dids';
import type { OutOfBandService } from '../../oob/OutOfBandService';
import type { ConnectionService } from '../services/ConnectionService';
import { ConnectionResponseMessage } from '../messages';
export declare class ConnectionResponseHandler implements Handler {
    private agentConfig;
    private connectionService;
    private outOfBandService;
    private didResolverService;
    supportedMessages: (typeof ConnectionResponseMessage)[];
    constructor(agentConfig: AgentConfig, connectionService: ConnectionService, outOfBandService: OutOfBandService, didResolverService: DidResolverService);
    handle(messageContext: HandlerInboundMessage<ConnectionResponseHandler>): Promise<import("../../../types").OutboundMessage<import("../messages").TrustPingMessage> | undefined>;
}
