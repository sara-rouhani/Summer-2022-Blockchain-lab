import type { AgentConfig } from '../../../../../agent/AgentConfig';
import type { Handler, HandlerInboundMessage } from '../../../../../agent/Handler';
import type { V1CredentialService } from '../V1CredentialService';
import { V1ProposeCredentialMessage } from '../messages';
export declare class V1ProposeCredentialHandler implements Handler {
    private credentialService;
    private agentConfig;
    supportedMessages: (typeof V1ProposeCredentialMessage)[];
    constructor(credentialService: V1CredentialService, agentConfig: AgentConfig);
    handle(messageContext: HandlerInboundMessage<V1ProposeCredentialHandler>): Promise<import("../../../../../types").OutboundMessage<import("../messages").V1OfferCredentialMessage> | undefined>;
    private acceptProposal;
}
