import type { DependencyManager } from '../../plugins';
import type { Key } from './domain/Key';
import type { DidResolutionOptions } from './types';
import { DidRepository } from './repository';
import { DidResolverService } from './services/DidResolverService';
export declare class DidsModule {
    private resolverService;
    private didRepository;
    constructor(resolverService: DidResolverService, didRepository: DidRepository);
    resolve(didUrl: string, options?: DidResolutionOptions): Promise<import("./types").DidResolutionResult>;
    resolveDidDocument(didUrl: string): Promise<import("./domain").DidDocument>;
    findByRecipientKey(recipientKey: Key): Promise<import("./repository").DidRecord | null>;
    findAllByRecipientKey(recipientKey: Key): Promise<import("./repository").DidRecord[]>;
    /**
     * Registers the dependencies of the dids module module on the dependency manager.
     */
    static register(dependencyManager: DependencyManager): void;
}
