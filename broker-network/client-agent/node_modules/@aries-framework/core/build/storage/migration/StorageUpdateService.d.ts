import type { VersionString } from '../../utils/version';
import { AgentConfig } from '../../agent/AgentConfig';
import { StorageVersionRecord } from './repository/StorageVersionRecord';
import { StorageVersionRepository } from './repository/StorageVersionRepository';
export declare class StorageUpdateService {
    private static STORAGE_VERSION_RECORD_ID;
    private logger;
    private storageVersionRepository;
    constructor(agentConfig: AgentConfig, storageVersionRepository: StorageVersionRepository);
    isUpToDate(): Promise<boolean>;
    getCurrentStorageVersion(): Promise<VersionString>;
    setCurrentStorageVersion(storageVersion: VersionString): Promise<void>;
    /**
     * Retrieve the update record, creating it if it doesn't exist already.
     *
     * The storageVersion will be set to the INITIAL_STORAGE_VERSION if it doesn't exist yet,
     * as we can assume the wallet was created before the udpate record existed
     */
    getStorageVersionRecord(): Promise<StorageVersionRecord>;
}
