import type { AgentConfig } from '../../../../../agent/AgentConfig';
import type { Handler } from '../../../../../agent/Handler';
import type { InboundMessageContext } from '../../../../../agent/models/InboundMessageContext';
import type { V2CredentialService } from '../V2CredentialService';
import { V2ProposeCredentialMessage } from '../messages/V2ProposeCredentialMessage';
export declare class V2ProposeCredentialHandler implements Handler {
    private credentialService;
    private agentConfig;
    supportedMessages: (typeof V2ProposeCredentialMessage)[];
    constructor(credentialService: V2CredentialService, agentConfig: AgentConfig);
    handle(messageContext: InboundMessageContext<V2ProposeCredentialMessage>): Promise<import("../../../../../types").OutboundMessage<import("..").V2OfferCredentialMessage> | undefined>;
    private acceptProposal;
}
